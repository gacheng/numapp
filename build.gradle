/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application.
    id 'application'
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'
    implementation 'commons-logging:commons-logging:1.2'
    implementation 'commons-io:commons-io:2.6'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.13'
}

application {
    // Define the main class for the application.
    mainClassName = 'com.relic.numapp.server.ServerStarter'

    version = '1.0'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

jar {
    manifest {
        attributes 'Main-Class': 'com.relic.numapp.client.TcpClientManual'
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

task(startServer, dependsOn: 'classes', type: JavaExec) {
    main = 'com.relic.numapp.server.ServerStarter'
    classpath = sourceSets.main.runtimeClasspath
}

task(clientAuto, dependsOn: 'classes', type: JavaExec) {
    main = 'com.relic.numapp.client.TcpClientAuto'
    classpath = sourceSets.main.runtimeClasspath
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': 'com.relic.numapp.client.TcpClientManual'
    }
    baseName = project.name + '-all'
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}